version: '3'

services:
  db:
    container_name: db
    image: postgres:14
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - 5432:5432
    volumes:
      - ./scripts/1-init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - pgdata:/var/lib/postgresql/data

  # gql:
  #   image: hasura/graphql-engine:v2.25.1
  #   ports:
  #     - 15003:8080
  #   env_file:
  #     - .env
  #   environment:
  #     HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
  #     HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
  #     HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
  #     HASURA_GRAPHQL_DEV_MODE: "true"
  #     HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  #     HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
  #   depends_on:
  #     - db
  #   restart: always

  broker:
    container_name: broker
    image: bitnami/rabbitmq
    environment:
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_DISK_FREE_RELATIVE_LIMIT=${RABBITMQ_DISK_FREE_RELATIVE_LIMIT}
    ports:
      - 4369:4369
      - 5672:5672
      - 25672:25672
      - 15672:15672
    volumes:
      - broker:/bitnami

volumes:
  pgdata:
  broker:
